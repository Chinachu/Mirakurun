# https://aka.ms/yaml

trigger:
  branches:
    include:
    - master
    - feature/*
    - refs/tags/*.*.*

pr:
  branches:
    include:
    - master

resources:
- repo: self

variables:
  tag: '$(Build.SourceBranchName)'

stages:
- stage: Build
  jobs:
  - job: Build
    strategy:
      matrix:
        v14:
          NODE_VERSION_SPEC: '14.x'
        v16:
          NODE_VERSION_SPEC: '16.x'
        v18:
          NODE_VERSION_SPEC: '18.x'
      maxParallel: 3
    pool:
      vmImage: 'ubuntu-20.04'
    steps:
    - checkout: self
      submodules: true
    - task: NodeTool@0
      displayName: 'Install Node.js'
      inputs:
        versionSpec: '$(NODE_VERSION_SPEC)'
    - script: npm install -g npm@latest
      displayName: Install latest npm
    - script: npm install
      displayName: npm install
    - script: npm run build
      displayName: npm run build
    - script: npm test
      displayName: npm test
    - script: npm run clean
      displayName: npm run clean
  # todo: publish
  # - job: Publish
  #   condition: |
  #     and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))
- stage: DockerBuildAndPush
  condition: |
    and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))
  jobs:
  - job: Build
    strategy:
      matrix:
        AMD64:
          ARCH: 'amd64'
          PLATFORM: 'linux/amd64'
        ARMv7:
          ARCH: 'arm32v7'
          PLATFORM: 'linux/arm/v7'
        ARMv8:
          ARCH: 'arm64v8'
          PLATFORM: 'linux/arm64/v8'
      maxParallel: 3
    pool:
      vmImage: 'ubuntu-20.04'
    steps:
    - checkout: self
      submodules: true
    - script: |
        docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
      # see: https://docs.microsoft.com/en-us/azure/devops/pipelines/ecosystems/containers/build-image?view=azure-devops#how-to-build-linux-container-images-for-architectures-other-than-x64
      # see: https://github.com/multiarch/qemu-user-static#getting-started
      displayName: Prepare binfmt_misc
    - task: Docker@2
      displayName: docker build
      inputs:
        repository: '$(Build.Repository.Name)'
        command: 'build'
        Dockerfile: '$(Build.SourcesDirectory)/docker/Dockerfile'
        buildContext: '$(Build.SourcesDirectory)'
        tags: |
          $(ARCH)-$(tag)
          $(ARCH)-latest
        arguments: '--build-arg ARCH=$(ARCH)/ --platform $(PLATFORM)'
        addPipelineData: false
    - task: Docker@2
      displayName: docker push
      inputs:
        containerRegistry: 'Docker Hub'
        repository: '$(Build.Repository.Name)'
        command: 'push'
        tags: |
          $(ARCH)-$(tag)
          $(ARCH)-latest

- stage: DockerManifestPush
  condition: |
    and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))
  jobs:
  - job: Manifest
    pool:
      vmImage: 'ubuntu-20.04'
    steps:
    - task: Docker@2
      inputs:
        containerRegistry: 'Docker Hub'
        command: 'login'
    - script: |
        export REPOSITORY_NAME=`echo $(Build.Repository.Name) | tr [:upper:] [:lower:]`
        export DOCKER_CLI_EXPERIMENTAL=enabled
        docker manifest create $REPOSITORY_NAME:$(tag) \
          $REPOSITORY_NAME:amd64-$(tag) \
          $REPOSITORY_NAME:arm32v7-$(tag) \
          $REPOSITORY_NAME:arm64v8-$(tag)
        docker manifest push $REPOSITORY_NAME:$(tag)
        docker manifest create $REPOSITORY_NAME:latest \
          $REPOSITORY_NAME:amd64-latest \
          $REPOSITORY_NAME:arm32v7-latest \
          $REPOSITORY_NAME:arm64v8-latest
        docker manifest push $REPOSITORY_NAME:latest
      # see: https://docs.docker.com/engine/reference/commandline/manifest/#create-and-push-a-manifest-list
      displayName: docker manifest push
    - task: Docker@2
      inputs:
        containerRegistry: 'Docker Hub'
        command: 'logout'
